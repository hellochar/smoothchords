{"version":3,"sources":["chord.tsx","motion.tsx","motionOption.tsx","circleOfFourths.tsx","midiNoteCollector.ts","chordFinder.ts","scales.ts","piano.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ChordComponent","_React$PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props$chord","props","chord","degree","quality","inversion","react_default","a","createElement","className","renderRomanNumeral","renderInversionSymbol","numeral","split","React","PureComponent","Motions","root","movement","scaleDegreeOffset","newInversion","first","second","move","motion","scale","newDegree","newChord","chords","Error","objectSpread","ChordMovementComponent","string","map","v","index","cloneElement","mapping","u","d",".","MotionOptionComponent","_this$props$option","option","destinationChord","chord_ChordComponent","maybeRenderMovement","motion_ChordMovementComponent","ANGLES","Math","PI","SCALE_DEGREE_ORDER","CircleOfFourths","scaleDegree","_this","elements","diatonicChord","getDiatonicChord","isPlayingDiatonicChord","motionOptions","applyMotion","_loop","i","Number","angle","find","isActive","push","renderMotionOption","indexOf","optionComponent","radiusOffset","x","cos","y","sin","style","transform","concat","classnames","active","motionOption_MotionOptionComponent","MidiNoteCollector","onMidiNotes","midi","pitches","handleMIDISuccess","allInputs","inputs","values","input","next","done","onmidimessage","handleMIDIMessage","event","console","log","data","messageType","notePitch","MIDI_MESSAGE_TYPE_NOTE_ON","toConsumableArray","MIDI_MESSAGE_TYPE_NOTE_OFF","filter","p","slice","handleMIDIFailure","warn","navigator","requestMIDIAccess","sysex","then","CHORD_PATTERNS","tenor","alto","getChord","notes","sort","b","length","_notes$map","n","_notes$map2","slicedToArray","dTenor","dAlto","pattern","rootNoteChroma","semitoneIndex","semitones","Scale","name","semitone","getOctaveRespectingPitch","octave","floor","pitchClass","LydianScale","MajorScale","MixolydianScale","DorianScale","MinorScale","PhrygianScale","LocrianScale","SCALES","F Lydian","C Major","G Mixolydian","D Dorian","A Minor","E Phrygian","B Locrian","Piano","keys","pitch","chroma","piano_PianoKeyWhite","piano_PianoKeyBlack","PianoKeyWhite","_ref","PianoKeyBlack","_ref2","App","call","state","noteCollector","handleMidiNotes","setState","_this2","onChange","target","circleOfFourths_CircleOfFourths","piano_Piano","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99c074b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport type ScaleDegree = 1 | 2 | 3 | 4 | 5 | 6 | 7;\r\nexport type Inversion = \"root\" | \"first\" | \"second\";\r\nexport type Quality = \"major\" | \"minor\" | \"diminished\" | \"augmented\";\r\nexport interface Chord {\r\n  quality: Quality;\r\n  inversion: Inversion;\r\n  degree: ScaleDegree;\r\n}\r\n\r\nexport class ChordComponent extends React.PureComponent<{chord: Chord}> {\r\n  render() {\r\n    const {degree, quality, inversion} = this.props.chord;\r\n    return (\r\n      <div className=\"chord\">\r\n        <span className=\"chord-numeral\">{this.renderRomanNumeral(quality, degree)}</span>\r\n        {this.renderInversionSymbol(inversion)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRomanNumeral(quality: Quality, degree: ScaleDegree) {\r\n    const numerals = quality === \"major\" || quality === \"augmented\" ?\r\n      \"Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ\".split(\" \") :\r\n      \"ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ\".split(\" \");\r\n    const numeral = numerals[degree - 1];\r\n    if (quality === \"diminished\") {\r\n      return numeral + \"ᵒ\";\r\n    } else if (quality === \"augmented\") {\r\n      return numeral + \"+\";\r\n    } else {\r\n      return numeral;\r\n    }\r\n  }\r\n\r\n  renderInversionSymbol(inversion: Inversion) {\r\n    if (inversion === \"root\") {\r\n      return null;\r\n    } else if (inversion === \"first\") {\r\n      return (\r\n        <span className=\"inversion inversion-first\">\r\n          <sup>6</sup>\r\n        </span>\r\n      );\r\n    } else if (inversion === \"second\") {\r\n      return (\r\n        <span className=\"inversion inversion-second\">\r\n          <sup>6</sup>\r\n          <br />\r\n          <sub>4</sub>\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n}","import { Inversion, Chord } from \"./chord\";\r\nimport { Scale } from \"./scales\";\r\nimport React from \"react\";\r\n\r\nexport type ChordMovement = string;\r\n\r\nexport interface ChordMotion {\r\n  movement: ChordMovement;\r\n  scaleDegreeOffset: number;\r\n  newInversion: Inversion;\r\n}\r\n\r\nexport const Motions = {\r\n  root: [\r\n    { movement: \"...\", scaleDegreeOffset: 1, newInversion: \"root\" },\r\n    { movement: \"d..\", scaleDegreeOffset: 3, newInversion: \"first\" },\r\n    { movement: \"dd.\", scaleDegreeOffset: 5, newInversion: \"second\" },\r\n    { movement: \"ddd\", scaleDegreeOffset: 7, newInversion: \"root\" },\r\n    { movement: \"..u\", scaleDegreeOffset: 6, newInversion: \"second\" },\r\n    { movement: \".uu\", scaleDegreeOffset: 4, newInversion: \"first\" },\r\n    { movement: \"uuu\", scaleDegreeOffset: 2, newInversion: \"root\" },\r\n  ] as ChordMotion[],\r\n  first: [\r\n    { movement: \"...\", scaleDegreeOffset: 1, newInversion: \"first\" },\r\n    { movement: \".d.\", scaleDegreeOffset: 3, newInversion: \"second\" },\r\n    { movement: \".dd\", scaleDegreeOffset: 5, newInversion: \"root\" },\r\n    { movement: \"ddd\", scaleDegreeOffset: 7, newInversion: \"first\" },\r\n    { movement: \"u..\", scaleDegreeOffset: 6, newInversion: \"root\" },\r\n    { movement: \"u.u\", scaleDegreeOffset: 4, newInversion: \"second\" },\r\n    { movement: \"uuu\", scaleDegreeOffset: 2, newInversion: \"first\" },\r\n  ] as ChordMotion[],\r\n  second: [\r\n    { movement: \"...\", scaleDegreeOffset: 1, newInversion: \"second\" },\r\n    { movement: \"..d\", scaleDegreeOffset: 3, newInversion: \"root\" },\r\n    { movement: \"d.d\", scaleDegreeOffset: 5, newInversion: \"first\" },\r\n    { movement: \"ddd\", scaleDegreeOffset: 7, newInversion: \"second\" },\r\n    { movement: \".u.\", scaleDegreeOffset: 6, newInversion: \"first\" },\r\n    { movement: \"uu.\", scaleDegreeOffset: 4, newInversion: \"root\" },\r\n    { movement: \"uuu\", scaleDegreeOffset: 2, newInversion: \"second\" },\r\n  ] as ChordMotion[],\r\n};\r\n\r\nexport function move(chord: Chord, motion: ChordMotion, scale: Scale): Chord {\r\n  const newDegree = ((chord.degree - 1) + (motion.scaleDegreeOffset - 1)) % 7 + 1;\r\n  const newChord = scale.chords[newDegree - 1];\r\n  if (!newChord) { throw new Error(\"bad\"); }\r\n  return {\r\n    ...newChord,\r\n    inversion: motion.newInversion,\r\n  };\r\n}\r\n\r\nexport class ChordMovementComponent extends React.PureComponent<{movement: ChordMovement}> {\r\n  static mapping: { [char: string]: JSX.Element } = {\r\n    \"u\": <span className=\"voice-movement\">↑</span>,\r\n    \"d\": <span className=\"voice-movement\">↓</span>,\r\n    \".\": <span className=\"voice-movement\">•</span>,\r\n  };\r\n\r\n  render() {\r\n    const string = this.props.movement.split(\"\").map((v, index) => {\r\n      return React.cloneElement(ChordMovementComponent.mapping[v], { key: index })\r\n    });\r\n    return <div className=\"chord-movement\">{string}</div>;\r\n  }\r\n}","import { Chord, ChordComponent } from \"./chord\";\r\nimport { ChordMotion, Motions, move as applyMotion, ChordMovementComponent } from \"./motion\";\r\nimport { Scale } from \"./scales\";\r\nimport React from \"react\";\r\n\r\nexport interface MotionOption {\r\n  chord: Chord;\r\n  destinationChord: Chord;\r\n  motion: ChordMotion;\r\n  scale: Scale;\r\n}\r\n\r\nexport function getMotionsOptionsFor(chord: Chord, scale: Scale): MotionOption[] {\r\n  return Motions[chord.inversion].map((motion) => ({\r\n    chord,\r\n    destinationChord: applyMotion(chord, motion, scale),\r\n    motion,\r\n    scale,\r\n  }));\r\n}\r\n\r\nexport class MotionOptionComponent extends React.PureComponent<{option: MotionOption}> {\r\n  render() {\r\n    const {destinationChord, motion} = this.props.option;\r\n    return (\r\n      <div className=\"motion-option\">\r\n        <ChordComponent chord={destinationChord} />\r\n        { this.maybeRenderMovement(motion) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  maybeRenderMovement(motion: ChordMotion) {\r\n    if (motion.movement !== \"...\") {\r\n      return <ChordMovementComponent movement={motion.movement} />;\r\n    }\r\n  }\r\n}","import React from \"react\";\r\nimport { ScaleDegree, Inversion, Chord } from \"./chord\";\r\nimport { Scale } from \"./scales\";\r\nimport { MotionOptionComponent, getMotionsOptionsFor, MotionOption } from \"./motionOption\";\r\nimport classnames from \"classnames\";\r\n\r\nconst radius = 200;\r\n\r\n// Starting from the top, going counterclockwise.\r\nconst ANGLES = [0, 1, 2, 3, 4, 5, 6].map((index) => -Math.PI / 2 - index/7 * Math.PI * 2);\r\nconst SCALE_DEGREE_ORDER: ScaleDegree[] = [1, 4, 7, 3, 6, 2, 5];\r\n\r\nexport interface ICircleOfFourthsProps {\r\n  scale: Scale;\r\n  chord: Chord;\r\n}\r\n\r\nexport class CircleOfFourths extends React.PureComponent<ICircleOfFourthsProps, {}> {\r\n  getDiatonicChord(scaleDegree: number, inversion: Inversion): Chord {\r\n    return {\r\n      ...this.props.scale.chords[scaleDegree - 1],\r\n      inversion,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const elements: JSX.Element[] = [];\r\n    const diatonicChord = this.getDiatonicChord(this.props.chord.degree, this.props.chord.inversion);\r\n    const isPlayingDiatonicChord = diatonicChord.quality === this.props.chord.quality;\r\n\r\n    const motionOptions = getMotionsOptionsFor(diatonicChord, this.props.scale);\r\n    for (let i in SCALE_DEGREE_ORDER) {\r\n      const index = Number(i);\r\n      const angle = ANGLES[index];\r\n      const option = motionOptions.find((option) => option.destinationChord.degree === SCALE_DEGREE_ORDER[index]);\r\n      if (!option) { throw new Error(\"\"); }\r\n      const isActive = SCALE_DEGREE_ORDER[index] === this.props.chord.degree && isPlayingDiatonicChord;\r\n      elements.push(this.renderMotionOption(option, angle, 0, index, isActive));\r\n    }\r\n    // we're playing a borrowed chord; render that\r\n    if (!isPlayingDiatonicChord) {\r\n      // hack this - just use a dummy option that doesn't get rendered\r\n      const option: MotionOption = {\r\n        chord: this.props.chord,\r\n        destinationChord: this.props.chord,\r\n        motion: { movement: \"...\", newInversion: this.props.chord.inversion, scaleDegreeOffset: 1 },\r\n        scale: this.props.scale,\r\n      };\r\n      const index = SCALE_DEGREE_ORDER.indexOf(diatonicChord.degree);\r\n      const angle = ANGLES[index];\r\n      const optionComponent = this.renderMotionOption(option, angle, -75, index, true);\r\n      elements.push(optionComponent);\r\n    }\r\n\r\n    return (\r\n      <div className=\"circle-of-fourths\">\r\n        {elements}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderMotionOption(option: MotionOption, angle: number, radiusOffset: number, index: number, isActive: boolean) {\r\n    const x = Math.cos(angle) * (radius + radiusOffset) + radius;\r\n    const y = Math.sin(angle) * (radius + radiusOffset) + radius;\r\n    const style: React.CSSProperties = {\r\n      transform: `translate(${x}px, ${y}px)`\r\n    };\r\n    const className = classnames(\"option-container\", { \"active\": isActive });\r\n    return (\r\n      <div className={className} style={style} key={index}>\r\n        { isActive ? <div className=\"active-ring\"></div> : null }\r\n        <MotionOptionComponent option={option} />\r\n      </div>\r\n    );\r\n  }\r\n}","import { MidiPitch } from \"./chordFinder\";\r\n\r\nconst MIDI_MESSAGE_TYPE_NOTE_OFF = 128;\r\nconst MIDI_MESSAGE_TYPE_NOTE_ON = 144;\r\n\r\nexport class MidiNoteCollector {\r\n  midi?: WebMidi.MIDIAccess;\r\n  private pitches: MidiPitch[] = [];\r\n  constructor(public onMidiNotes: (pitches: MidiPitch[]) => void) {\r\n    // start talking to MIDI controller\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess({\r\n        sysex: false\r\n      }).then(this.handleMIDISuccess, this.handleMIDIFailure);\r\n    } else {\r\n      console.warn(\"No MIDI support in your browser\")\r\n    }\r\n  }\r\n\r\n  handleMIDISuccess = (midi: WebMidi.MIDIAccess) => {\r\n    // this is all our MIDI data\r\n    this.midi = midi;\r\n    const allInputs = midi.inputs.values();\r\n    // loop over all available inputs and listen for any MIDI input\r\n    for (let input = allInputs.next(); input && !input.done; input = allInputs.next()) {\r\n      // when a MIDI value is received call the onMIDIMessage function\r\n      input.value.onmidimessage = this.handleMIDIMessage;\r\n    }\r\n  }\r\n\r\n  handleMIDIMessage = (event: WebMidi.MIDIMessageEvent) => {\r\n    console.log(event.data);\r\n    const messageType = event.data[0];\r\n    const notePitch = event.data[1];\r\n    if (messageType >= MIDI_MESSAGE_TYPE_NOTE_ON &&\r\n        messageType <  MIDI_MESSAGE_TYPE_NOTE_ON + 16) {\r\n      this.pitches = [...this.pitches, notePitch];\r\n    } else if (messageType >= MIDI_MESSAGE_TYPE_NOTE_OFF &&\r\n               messageType <  MIDI_MESSAGE_TYPE_NOTE_OFF + 16) {\r\n      this.pitches = this.pitches.filter((p) => p !== notePitch);\r\n    }\r\n    this.onMidiNotes(this.pitches.slice());\r\n  }\r\n\r\n  handleMIDIFailure = () => {\r\n    console.warn(\"Did not recognise MIDI controller\");\r\n  }\r\n}","import { Chord, ScaleDegree } from \"./chord\";\r\nimport { Scale } from \"./scales\";\r\n\r\n// 0 to 127 corresponding to pitch value.\r\nexport type MidiPitch = number;\r\n\r\n// augmented chords are tricky: it's difficult to describe the inversion of because\r\n// it can dependend on the voice leading. TODO detect voice leading.\r\nconst CHORD_PATTERNS = [\r\n  // root\r\n  { tenor: 4, alto: 8, inversion: \"root\", quality: \"augmented\" },\r\n  { tenor: 4, alto: 7, inversion: \"root\", quality: \"major\" },\r\n  { tenor: 3, alto: 7, inversion: \"root\", quality: \"minor\" },\r\n  { tenor: 3, alto: 6, inversion: \"root\", quality: \"diminished\" },\r\n\r\n  // first inversion\r\n  { tenor: 5, alto: 8, inversion: \"first\", quality: \"minor\" },\r\n  { tenor: 5, alto: 9, inversion: \"first\", quality: \"major\" },\r\n  { tenor: 6, alto: 9, inversion: \"first\", quality: \"diminished\" },\r\n\r\n  // second inversion\r\n  { tenor: 4, alto: 9, inversion: \"second\", quality: \"minor\" },\r\n  { tenor: 3, alto: 8, inversion: \"second\", quality: \"major\" },\r\n  { tenor: 3, alto: 9, inversion: \"second\", quality: \"diminished\" },\r\n];\r\n\r\n// We recognize three patterns:\r\n// note, 3rd (minor or major), 5th\r\n// note, 4th, 6th (minor or major)\r\n// note, 3rd (minor or major), 6th (perfect 4th above 3rd)\r\nexport function getChord(pitches: MidiPitch[], scale: Scale): Chord | undefined {\r\n  // sort from lowest to highest\r\n  const notes = pitches.sort((a, b) => a - b).slice(0, 3);\r\n  if (notes.length < 3) {\r\n    return;\r\n  }\r\n  const [, dTenor, dAlto] = notes.map((n) => n - notes[0]);\r\n  const pattern = CHORD_PATTERNS.find((pattern) => pattern.tenor === dTenor && pattern.alto === dAlto);\r\n  if (pattern) {\r\n    const rootNote =\r\n      pattern.inversion === \"root\" ? notes[0] :\r\n      pattern.inversion === \"first\" ? notes[1] :\r\n      notes[2];\r\n\r\n    // relative to C\r\n    const rootNoteChroma = (rootNote - scale.key) % 12;\r\n    const semitoneIndex = scale.semitones.indexOf(rootNoteChroma);\r\n    if (semitoneIndex !== -1) {\r\n      return {\r\n        degree: semitoneIndex + 1,\r\n        inversion: pattern.inversion,\r\n        quality: pattern.quality,\r\n      } as Chord;\r\n    }\r\n  }\r\n}","import { Chord } from \"./chord\";\r\nimport { getChord } from \"./chordFinder\";\r\n\r\nexport class Scale {\r\n  public chords: Chord[];\r\n  // key - chroma of the tonic, from 0 to 12, relative to C.\r\n  constructor(public semitones: number[], public key: number, public name: string) {\r\n    this.chords = semitones.map((semitone, index) => {\r\n      const pitches = [\r\n        this.getOctaveRespectingPitch(index) + key,\r\n        this.getOctaveRespectingPitch(index + 2) + key,\r\n        this.getOctaveRespectingPitch(index + 4) + key\r\n      ];\r\n      const chord = getChord(pitches, this);\r\n      if (!chord) { throw new Error(\"couldn't detect chord\"); }\r\n      return chord;\r\n    });\r\n  }\r\n\r\n  // e.g. asking for a 9th would give you 14 semitones\r\n  getOctaveRespectingPitch(index: number) {\r\n    const octave = Math.floor(index / this.semitones.length);\r\n    const pitchClass = index % this.semitones.length;\r\n    return this.semitones[pitchClass] + 12 * octave;\r\n  }\r\n}\r\nexport const LydianScale = new Scale([0, 2, 4, 6, 7, 9, 11], 5, \"F Lydian\");\r\nexport const MajorScale = new Scale([0, 2, 4, 5, 7, 9, 11], 0, \"C Major\");\r\nexport const MixolydianScale = new Scale([0, 2, 4, 5, 7, 9, 10], 7, \"G Mixolydian\");\r\nexport const DorianScale = new Scale([0, 2, 3, 5, 7, 9, 10], 2, \"D Dorian\");\r\nexport const MinorScale = new Scale([0, 2, 3, 5, 7, 8, 10], 9, \"A Minor\");\r\nexport const PhrygianScale = new Scale([0, 1, 3, 5, 7, 8, 10], 4, \"E Phrygian\");\r\nexport const LocrianScale = new Scale([0, 1, 3, 5, 6, 8, 10], 11, \"B Locrian\");\r\n\r\nexport const SCALES: { [name: string]: Scale } = {\r\n  \"F Lydian\": LydianScale,\r\n  \"C Major\": MajorScale,\r\n  \"G Mixolydian\": MixolydianScale,\r\n  \"D Dorian\": DorianScale,\r\n  \"A Minor\": MinorScale,\r\n  \"E Phrygian\": PhrygianScale,\r\n  \"B Locrian\": LocrianScale,\r\n};","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { MajorScale } from \"./scales\";\r\nimport { MidiPitch } from \"./chordFinder\";\r\nimport './piano.scss';\r\n\r\nexport interface PianoProps {\r\n  pitches: MidiPitch[];\r\n}\r\n\r\nexport class Piano extends React.PureComponent<PianoProps, {}> {\r\n  render() {\r\n    const keys: JSX.Element[] = [];\r\n    for (let pitch = 36; pitch <= 36 + 48; pitch++) {\r\n      const chroma = pitch % 12;\r\n      const isActive = this.props.pitches.indexOf(pitch) !== -1;\r\n      if (MajorScale.semitones.indexOf(chroma) !== -1) {\r\n        // white key\r\n        keys.push(<PianoKeyWhite isActive={isActive} key={pitch} />);\r\n      } else {\r\n        // black key\r\n        keys.push(<PianoKeyBlack isActive={isActive} key={pitch} />);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"piano\">\r\n        {keys}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst PianoKeyWhite: React.FC<{isActive: boolean}> = ({isActive}) => {\r\n  const className = classnames(\"piano-key piano-key-white\", {\"active\": isActive});\r\n  return (\r\n    <div className={className}></div>\r\n  )\r\n};\r\n\r\nconst PianoKeyBlack: React.FC<{isActive: boolean}> = ({isActive}) => {\r\n  const className = classnames(\"piano-key piano-key-black\", { \"active\": isActive });\r\n  return (\r\n    <div className={className}></div>\r\n  )\r\n};","import React from 'react';\nimport { ScaleDegree, Inversion, Chord } from './chord';\nimport { CircleOfFourths } from './circleOfFourths';\nimport { MidiNoteCollector } from './midiNoteCollector';\nimport { getChord, MidiPitch } from './chordFinder';\nimport { Scale, MajorScale, SCALES } from './scales';\nimport { Piano } from './piano';\n\ninterface IAppState {\n  chord: Chord;\n  pitches: MidiPitch[];\n  scale: Scale;\n  // scaleDegree: ScaleDegree;\n  // inversion: Inversion;\n}\n\nclass App extends React.PureComponent<{}, IAppState> {\n  state: IAppState = {\n    pitches: [],\n    chord: MajorScale.chords[0],\n    // inversion: \"root\",\n    // scaleDegree: 1,\n    scale: MajorScale,\n  };\n  noteCollector: MidiNoteCollector;\n  constructor(props: {}) {\n    super(props);\n    this.noteCollector = new MidiNoteCollector(this.handleMidiNotes);\n  }\n\n  handleMidiNotes = (pitches: MidiPitch[]) => {\n    const chord = getChord(pitches, this.state.scale);\n    console.log(\"getting chord from\", pitches, \"got\", chord);\n    if (chord) {\n      this.setState({\n        pitches,\n        chord,\n      });\n    } else {\n      this.setState({ pitches });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"top-area\">\n          <textarea className=\"scratchpad\" />\n          <select value={this.state.scale.name} onChange={(v) => this.setState({scale: SCALES[v.target.value]})}>\n            {Object.keys(SCALES).map((name) => <option value={name}>{name}</option>)}\n          </select>\n          <CircleOfFourths\n            chord={this.state.chord}\n            scale={this.state.scale}\n            />\n        </div>\n        <Piano pitches={this.state.pitches} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}