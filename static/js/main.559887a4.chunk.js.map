{"version":3,"sources":["chordFinder.ts","chord.tsx","motion.tsx","motionOption.tsx","circleOfFourths.tsx","scales.ts","pianoRoll.tsx","midiNoteCollector.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["CHORD_PATTERNS","tenor","alto","inversion","quality","getChord","pitches","scale","notes","sort","a","b","slice","length","_notes$map","map","n","_notes$map2","Object","slicedToArray","dTenor","dAlto","pattern","find","rootNoteChroma","key","semitoneIndex","semitones","indexOf","degree","ChordComponent","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this$props$chord","props","chord","react_default","createElement","className","renderRomanNumeral","renderInversionSymbol","numeral","split","React","PureComponent","Motions","root","movement","scaleDegreeOffset","newInversion","first","second","move","motion","newDegree","newChord","chords","Error","objectSpread","ChordMovementComponent","string","v","index","cloneElement","mapping","u","d",".","MotionOptionComponent","_this$props$option","option","destinationChord","chord_ChordComponent","maybeRenderMovement","motion_ChordMovementComponent","ANGLES","Math","PI","SCALE_DEGREE_ORDER","CircleOfFourths","scaleDegree","_this","elements","diatonicChord","getDiatonicChord","isPlayingDiatonicChord","motionOptions","applyMotion","_loop","i","Number","angle","isActive","push","renderMotionOption","optionComponent","radiusOffset","x","cos","y","sin","style","transform","concat","classnames","active","motionOption_MotionOptionComponent","Scale","name","semitone","getOctaveRespectingPitch","octave","floor","pitchClass","LydianScale","MajorScale","MixolydianScale","DorianScale","MinorScale","PhrygianScale","LocrianScale","SCALES","F Lydian","C Major","G Mixolydian","D Dorian","A Minor","E Phrygian","B Locrian","PianoRoll","keys","pitch","chroma","pianoRoll_PianoKeyWhite","pianoRoll_PianoKeyBlack","PianoKeyWhite","_ref","pitchToMidiName","PianoKeyBlack","_ref2","PITCH_CLASSES","MidiNoteCollector","onMidiNotes","midi","handleMIDISuccess","allInputs","inputs","values","input","next","done","onmidimessage","handleMIDIMessage","event","console","log","data","messageType","notePitch","velocity","MIDI_MESSAGE_TYPE_NOTE_ON","toConsumableArray","TONE_SYNTH","triggerAttack","MIDI_MESSAGE_TYPE_NOTE_OFF","filter","p","triggerRelease","handleMIDIFailure","warn","navigator","requestMIDIAccess","sysex","then","Tone","lookAhead","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","release","releaseCurve","sustain","oscillator","type","harmonicity","modulationIndex","modulationType","toDestination","App","call","state","soundEnabled","noteCollector","handleMidiNotes","setState","handleCheckboxClick","Infinity","_this2","onChange","target","circleOfFourths_CircleOfFourths","checked","onClick","pianoRoll_PianoRoll","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.559887a4.chunk.js","sourcesContent":["import { Chord, ScaleDegree } from \"./chord\";\r\nimport { Scale } from \"./scales\";\r\n\r\n// 0 to 127 corresponding to pitch value.\r\nexport type MidiPitch = number;\r\n\r\n// augmented chords are tricky: it's difficult to describe the inversion of because\r\n// it can dependend on the voice leading. TODO detect voice leading.\r\nconst CHORD_PATTERNS = [\r\n  // root\r\n  { tenor: 4, alto: 8, inversion: \"root\", quality: \"augmented\" },\r\n  { tenor: 4, alto: 7, inversion: \"root\", quality: \"major\" },\r\n  { tenor: 3, alto: 7, inversion: \"root\", quality: \"minor\" },\r\n  { tenor: 3, alto: 6, inversion: \"root\", quality: \"diminished\" },\r\n\r\n  // first inversion\r\n  { tenor: 5, alto: 8, inversion: \"first\", quality: \"minor\" },\r\n  { tenor: 5, alto: 9, inversion: \"first\", quality: \"major\" },\r\n  { tenor: 6, alto: 9, inversion: \"first\", quality: \"diminished\" },\r\n\r\n  // second inversion\r\n  { tenor: 4, alto: 9, inversion: \"second\", quality: \"minor\" },\r\n  { tenor: 3, alto: 8, inversion: \"second\", quality: \"major\" },\r\n  { tenor: 3, alto: 9, inversion: \"second\", quality: \"diminished\" },\r\n];\r\n\r\n// We recognize three patterns:\r\n// note, 3rd (minor or major), 5th\r\n// note, 4th, 6th (minor or major)\r\n// note, 3rd (minor or major), 6th (perfect 4th above 3rd)\r\nexport function getChord(pitches: MidiPitch[], scale: Scale): Chord | undefined {\r\n  // sort from lowest to highest\r\n  const notes = pitches.sort((a, b) => a - b).slice(0, 3);\r\n  if (notes.length < 3) {\r\n    return;\r\n  }\r\n  const [, dTenor, dAlto] = notes.map((n) => n - notes[0]);\r\n  const pattern = CHORD_PATTERNS.find((pattern) => pattern.tenor === dTenor && pattern.alto === dAlto);\r\n  if (pattern) {\r\n    const rootNote =\r\n      pattern.inversion === \"root\" ? notes[0] :\r\n      pattern.inversion === \"first\" ? notes[1] :\r\n      notes[2];\r\n\r\n    // relative to C\r\n    const rootNoteChroma = (rootNote - scale.key) % 12;\r\n    const semitoneIndex = scale.semitones.indexOf(rootNoteChroma);\r\n    if (semitoneIndex !== -1) {\r\n      return {\r\n        degree: semitoneIndex + 1,\r\n        inversion: pattern.inversion,\r\n        quality: pattern.quality,\r\n      } as Chord;\r\n    }\r\n  }\r\n}","import React from \"react\";\r\n\r\nexport type ScaleDegree = 1 | 2 | 3 | 4 | 5 | 6 | 7;\r\nexport type Inversion = \"root\" | \"first\" | \"second\";\r\nexport type Quality = \"major\" | \"minor\" | \"diminished\" | \"augmented\";\r\nexport interface Chord {\r\n  quality: Quality;\r\n  inversion: Inversion;\r\n  degree: ScaleDegree;\r\n}\r\n\r\nexport class ChordComponent extends React.PureComponent<{chord: Chord}> {\r\n  render() {\r\n    const {degree, quality, inversion} = this.props.chord;\r\n    return (\r\n      <div className=\"chord\">\r\n        <span className=\"chord-numeral\">{this.renderRomanNumeral(quality, degree)}</span>\r\n        {this.renderInversionSymbol(inversion)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRomanNumeral(quality: Quality, degree: ScaleDegree) {\r\n    const numerals = quality === \"major\" || quality === \"augmented\" ?\r\n      \"Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ\".split(\" \") :\r\n      \"ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ\".split(\" \");\r\n    const numeral = numerals[degree - 1];\r\n    if (quality === \"diminished\") {\r\n      return numeral + \"ᵒ\";\r\n    } else if (quality === \"augmented\") {\r\n      return numeral + \"+\";\r\n    } else {\r\n      return numeral;\r\n    }\r\n  }\r\n\r\n  renderInversionSymbol(inversion: Inversion) {\r\n    if (inversion === \"root\") {\r\n      return null;\r\n    } else if (inversion === \"first\") {\r\n      return (\r\n        <span className=\"inversion inversion-first\">\r\n          <sup>6</sup>\r\n        </span>\r\n      );\r\n    } else if (inversion === \"second\") {\r\n      return (\r\n        <span className=\"inversion inversion-second\">\r\n          <sup>6</sup>\r\n          <br />\r\n          <sub>4</sub>\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n}","import { Inversion, Chord } from \"./chord\";\r\nimport { Scale } from \"./scales\";\r\nimport React from \"react\";\r\n\r\nexport type ChordMovement = string;\r\n\r\nexport interface ChordMotion {\r\n  movement: ChordMovement;\r\n  scaleDegreeOffset: number;\r\n  newInversion: Inversion;\r\n}\r\n\r\nexport const Motions = {\r\n  root: [\r\n    { movement: \"...\", scaleDegreeOffset: 1, newInversion: \"root\" },\r\n    { movement: \"d..\", scaleDegreeOffset: 3, newInversion: \"first\" },\r\n    { movement: \"dd.\", scaleDegreeOffset: 5, newInversion: \"second\" },\r\n    { movement: \"ddd\", scaleDegreeOffset: 7, newInversion: \"root\" },\r\n    { movement: \"..u\", scaleDegreeOffset: 6, newInversion: \"second\" },\r\n    { movement: \".uu\", scaleDegreeOffset: 4, newInversion: \"first\" },\r\n    { movement: \"uuu\", scaleDegreeOffset: 2, newInversion: \"root\" },\r\n  ] as ChordMotion[],\r\n  first: [\r\n    { movement: \"...\", scaleDegreeOffset: 1, newInversion: \"first\" },\r\n    { movement: \".d.\", scaleDegreeOffset: 3, newInversion: \"second\" },\r\n    { movement: \".dd\", scaleDegreeOffset: 5, newInversion: \"root\" },\r\n    { movement: \"ddd\", scaleDegreeOffset: 7, newInversion: \"first\" },\r\n    { movement: \"u..\", scaleDegreeOffset: 6, newInversion: \"root\" },\r\n    { movement: \"u.u\", scaleDegreeOffset: 4, newInversion: \"second\" },\r\n    { movement: \"uuu\", scaleDegreeOffset: 2, newInversion: \"first\" },\r\n  ] as ChordMotion[],\r\n  second: [\r\n    { movement: \"...\", scaleDegreeOffset: 1, newInversion: \"second\" },\r\n    { movement: \"..d\", scaleDegreeOffset: 3, newInversion: \"root\" },\r\n    { movement: \"d.d\", scaleDegreeOffset: 5, newInversion: \"first\" },\r\n    { movement: \"ddd\", scaleDegreeOffset: 7, newInversion: \"second\" },\r\n    { movement: \".u.\", scaleDegreeOffset: 6, newInversion: \"first\" },\r\n    { movement: \"uu.\", scaleDegreeOffset: 4, newInversion: \"root\" },\r\n    { movement: \"uuu\", scaleDegreeOffset: 2, newInversion: \"second\" },\r\n  ] as ChordMotion[],\r\n};\r\n\r\nexport function move(chord: Chord, motion: ChordMotion, scale: Scale): Chord {\r\n  const newDegree = ((chord.degree - 1) + (motion.scaleDegreeOffset - 1)) % 7 + 1;\r\n  const newChord = scale.chords[newDegree - 1];\r\n  if (!newChord) { throw new Error(\"bad\"); }\r\n  return {\r\n    ...newChord,\r\n    inversion: motion.newInversion,\r\n  };\r\n}\r\n\r\nexport class ChordMovementComponent extends React.PureComponent<{movement: ChordMovement}> {\r\n  static mapping: { [char: string]: JSX.Element } = {\r\n    \"u\": <span className=\"voice-movement\">↑</span>,\r\n    \"d\": <span className=\"voice-movement\">↓</span>,\r\n    \".\": <span className=\"voice-movement\">•</span>,\r\n  };\r\n\r\n  render() {\r\n    const string = this.props.movement.split(\"\").map((v, index) => {\r\n      return React.cloneElement(ChordMovementComponent.mapping[v], { key: index })\r\n    });\r\n    return <div className=\"chord-movement\">{string}</div>;\r\n  }\r\n}","import { Chord, ChordComponent } from \"./chord\";\r\nimport { ChordMotion, Motions, move as applyMotion, ChordMovementComponent } from \"./motion\";\r\nimport { Scale } from \"./scales\";\r\nimport React from \"react\";\r\n\r\nexport interface MotionOption {\r\n  chord: Chord;\r\n  destinationChord: Chord;\r\n  motion: ChordMotion;\r\n  scale: Scale;\r\n}\r\n\r\nexport function getMotionsOptionsFor(chord: Chord, scale: Scale): MotionOption[] {\r\n  return Motions[chord.inversion].map((motion) => ({\r\n    chord,\r\n    destinationChord: applyMotion(chord, motion, scale),\r\n    motion,\r\n    scale,\r\n  }));\r\n}\r\n\r\nexport class MotionOptionComponent extends React.PureComponent<{option: MotionOption}> {\r\n  render() {\r\n    const {destinationChord, motion} = this.props.option;\r\n    return (\r\n      <div className=\"motion-option\">\r\n        <ChordComponent chord={destinationChord} />\r\n        { this.maybeRenderMovement(motion) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  maybeRenderMovement(motion: ChordMotion) {\r\n    if (motion.movement !== \"...\") {\r\n      return <ChordMovementComponent movement={motion.movement} />;\r\n    }\r\n  }\r\n}","import React from \"react\";\r\nimport { ScaleDegree, Inversion, Chord } from \"./chord\";\r\nimport { Scale } from \"./scales\";\r\nimport { MotionOptionComponent, getMotionsOptionsFor, MotionOption } from \"./motionOption\";\r\nimport classnames from \"classnames\";\r\n\r\nconst radius = 200;\r\n\r\n// Starting from the top, going counterclockwise.\r\nconst ANGLES = [0, 1, 2, 3, 4, 5, 6].map((index) => -Math.PI / 2 - index/7 * Math.PI * 2);\r\nconst SCALE_DEGREE_ORDER: ScaleDegree[] = [1, 4, 7, 3, 6, 2, 5];\r\n\r\nexport interface ICircleOfFourthsProps {\r\n  scale: Scale;\r\n  chord: Chord;\r\n}\r\n\r\nexport class CircleOfFourths extends React.PureComponent<ICircleOfFourthsProps, {}> {\r\n  getDiatonicChord(scaleDegree: number, inversion: Inversion): Chord {\r\n    return {\r\n      ...this.props.scale.chords[scaleDegree - 1],\r\n      inversion,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const elements: JSX.Element[] = [];\r\n    const diatonicChord = this.getDiatonicChord(this.props.chord.degree, this.props.chord.inversion);\r\n    const isPlayingDiatonicChord = diatonicChord.quality === this.props.chord.quality;\r\n\r\n    const motionOptions = getMotionsOptionsFor(diatonicChord, this.props.scale);\r\n    for (let i in SCALE_DEGREE_ORDER) {\r\n      const index = Number(i);\r\n      const angle = ANGLES[index];\r\n      const option = motionOptions.find((option) => option.destinationChord.degree === SCALE_DEGREE_ORDER[index]);\r\n      if (!option) { throw new Error(\"\"); }\r\n      const isActive = SCALE_DEGREE_ORDER[index] === this.props.chord.degree && isPlayingDiatonicChord;\r\n      elements.push(this.renderMotionOption(option, angle, 0, index, isActive));\r\n    }\r\n    // we're playing a borrowed chord; render that\r\n    if (!isPlayingDiatonicChord) {\r\n      // hack this - just use a dummy option that doesn't get rendered\r\n      const option: MotionOption = {\r\n        chord: this.props.chord,\r\n        destinationChord: this.props.chord,\r\n        motion: { movement: \"...\", newInversion: this.props.chord.inversion, scaleDegreeOffset: 1 },\r\n        scale: this.props.scale,\r\n      };\r\n      const index = SCALE_DEGREE_ORDER.indexOf(diatonicChord.degree);\r\n      const angle = ANGLES[index];\r\n      const optionComponent = this.renderMotionOption(option, angle, -75, index, true);\r\n      elements.push(optionComponent);\r\n    }\r\n\r\n    return (\r\n      <div className=\"circle-of-fourths\">\r\n        {elements}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderMotionOption(option: MotionOption, angle: number, radiusOffset: number, index: number, isActive: boolean) {\r\n    const x = Math.cos(angle) * (radius + radiusOffset) + radius;\r\n    const y = Math.sin(angle) * (radius + radiusOffset) + radius;\r\n    const style: React.CSSProperties = {\r\n      transform: `translate(${x}px, ${y}px)`\r\n    };\r\n    const className = classnames(\"option-container\", { \"active\": isActive });\r\n    return (\r\n      <div className={className} style={style} key={index}>\r\n        { isActive ? <div className=\"active-ring\"></div> : null }\r\n        <MotionOptionComponent option={option} />\r\n      </div>\r\n    );\r\n  }\r\n}","import { Chord } from \"./chord\";\r\nimport { getChord } from \"./chordFinder\";\r\n\r\nexport class Scale {\r\n  public chords: Chord[];\r\n  // key - chroma of the tonic, from 0 to 12, relative to C.\r\n  constructor(public semitones: number[], public key: number, public name: string) {\r\n    this.chords = semitones.map((semitone, index) => {\r\n      const pitches = [\r\n        this.getOctaveRespectingPitch(index) + key,\r\n        this.getOctaveRespectingPitch(index + 2) + key,\r\n        this.getOctaveRespectingPitch(index + 4) + key\r\n      ];\r\n      const chord = getChord(pitches, this);\r\n      if (!chord) { throw new Error(\"couldn't detect chord\"); }\r\n      return chord;\r\n    });\r\n  }\r\n\r\n  // e.g. asking for a 9th would give you 14 semitones\r\n  getOctaveRespectingPitch(index: number) {\r\n    const octave = Math.floor(index / this.semitones.length);\r\n    const pitchClass = index % this.semitones.length;\r\n    return this.semitones[pitchClass] + 12 * octave;\r\n  }\r\n}\r\nexport const LydianScale = new Scale([0, 2, 4, 6, 7, 9, 11], 5, \"F Lydian\");\r\nexport const MajorScale = new Scale([0, 2, 4, 5, 7, 9, 11], 0, \"C Major\");\r\nexport const MixolydianScale = new Scale([0, 2, 4, 5, 7, 9, 10], 7, \"G Mixolydian\");\r\nexport const DorianScale = new Scale([0, 2, 3, 5, 7, 9, 10], 2, \"D Dorian\");\r\nexport const MinorScale = new Scale([0, 2, 3, 5, 7, 8, 10], 9, \"A Minor\");\r\nexport const PhrygianScale = new Scale([0, 1, 3, 5, 7, 8, 10], 4, \"E Phrygian\");\r\nexport const LocrianScale = new Scale([0, 1, 3, 5, 6, 8, 10], 11, \"B Locrian\");\r\n\r\nexport const SCALES: { [name: string]: Scale } = {\r\n  \"F Lydian\": LydianScale,\r\n  \"C Major\": MajorScale,\r\n  \"G Mixolydian\": MixolydianScale,\r\n  \"D Dorian\": DorianScale,\r\n  \"A Minor\": MinorScale,\r\n  \"E Phrygian\": PhrygianScale,\r\n  \"B Locrian\": LocrianScale,\r\n};","import classnames from \"classnames\";\r\nimport React from \"react\";\r\nimport { MidiPitch } from \"./chordFinder\";\r\nimport \"./pianoRoll.scss\";\r\nimport { MajorScale } from \"./scales\";\r\n\r\nexport interface PianoRollProps {\r\n  pitches: MidiPitch[];\r\n}\r\n\r\nexport class PianoRoll extends React.PureComponent<PianoRollProps, {}> {\r\n  render() {\r\n    const keys: JSX.Element[] = [];\r\n    for (let pitch = 36; pitch <= 36 + 48; pitch++) {\r\n      const chroma = pitch % 12;\r\n      const isActive = this.props.pitches.indexOf(pitch) !== -1;\r\n      if (MajorScale.semitones.indexOf(chroma) !== -1) {\r\n        // white key\r\n        keys.push(<PianoKeyWhite isActive={isActive} pitch={pitch} key={pitch} />);\r\n      } else {\r\n        // black key\r\n        keys.push(<PianoKeyBlack isActive={isActive} pitch={pitch} key={pitch} />);\r\n      }\r\n    }\r\n    return <div className=\"piano\">{keys}</div>;\r\n  }\r\n}\r\n\r\nconst PianoKeyWhite: React.FC<{ isActive: boolean; pitch: number }> = ({\r\n  isActive,\r\n  pitch,\r\n}) => {\r\n  const className = classnames(\"piano-key piano-key-white\", {\r\n    active: isActive,\r\n  });\r\n  return <div className={className}>{isActive ? pitchToMidiName(pitch) : null}</div>;\r\n};\r\n\r\nconst PianoKeyBlack: React.FC<{ isActive: boolean; pitch: number }> = ({\r\n  isActive,\r\n  pitch,\r\n}) => {\r\n  const className = classnames(\"piano-key piano-key-black\", {\r\n    active: isActive,\r\n  });\r\n  return <div className={className}>{isActive ? pitchToMidiName(pitch) : null}</div>;\r\n};\r\n\r\nconst PITCH_CLASSES = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\nexport function pitchToMidiName(pitch: number) {\r\n  // 48=C3\r\n  // we're using sharps only\r\n  // e.g. D# is 51 % 12 = 3\r\n  const pitchClassIndex = pitch % 12;\r\n  const pitchClass = PITCH_CLASSES[pitchClassIndex];\r\n  // 48 / 4 = 4 - 1 = 3\r\n  const octave = Math.floor(pitch / 12) - 1;\r\n  return `${pitchClass}${octave}`;\r\n}","import * as Tone from \"tone\";\r\nimport { MidiPitch } from \"./chordFinder\";\r\nimport { pitchToMidiName } from \"./pianoRoll\";\r\n\r\nconst MIDI_MESSAGE_TYPE_NOTE_OFF = 128;\r\nconst MIDI_MESSAGE_TYPE_NOTE_ON = 144;\r\n\r\nexport class MidiNoteCollector {\r\n  midi?: WebMidi.MIDIAccess;\r\n  private pitches: MidiPitch[] = [];\r\n  constructor(public onMidiNotes: (pitches: MidiPitch[]) => void) {\r\n    // start talking to MIDI controller\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess({\r\n        sysex: false\r\n      }).then(this.handleMIDISuccess, this.handleMIDIFailure);\r\n    } else {\r\n      console.warn(\"No MIDI support in your browser\")\r\n    }\r\n  }\r\n\r\n  handleMIDISuccess = (midi: WebMidi.MIDIAccess) => {\r\n    // this is all our MIDI data\r\n    this.midi = midi;\r\n    const allInputs = midi.inputs.values();\r\n    // loop over all available inputs and listen for any MIDI input\r\n    for (let input = allInputs.next(); input && !input.done; input = allInputs.next()) {\r\n      // when a MIDI value is received call the onMIDIMessage function\r\n      input.value.onmidimessage = this.handleMIDIMessage;\r\n    }\r\n  }\r\n\r\n  handleMIDIMessage = (event: WebMidi.MIDIMessageEvent) => {\r\n    console.log(event.data);\r\n    const messageType = event.data[0];\r\n    const notePitch = event.data[1];\r\n    const velocity = event.data[2] / 127;\r\n    if (messageType >= MIDI_MESSAGE_TYPE_NOTE_ON &&\r\n        messageType <  MIDI_MESSAGE_TYPE_NOTE_ON + 16) {\r\n      this.pitches = [...this.pitches, notePitch];\r\n      TONE_SYNTH.triggerAttack(pitchToMidiName(notePitch), velocity);\r\n    } else if (messageType >= MIDI_MESSAGE_TYPE_NOTE_OFF &&\r\n               messageType <  MIDI_MESSAGE_TYPE_NOTE_OFF + 16) {\r\n      this.pitches = this.pitches.filter((p) => p !== notePitch);\r\n      TONE_SYNTH.triggerRelease(pitchToMidiName(notePitch));\r\n    }\r\n    this.onMidiNotes(this.pitches.slice());\r\n  }\r\n\r\n  handleMIDIFailure = () => {\r\n    console.warn(\"Did not recognise MIDI controller\");\r\n  }\r\n}\r\n\r\nTone.context.lookAhead = 0;\r\n\r\nexport const TONE_SYNTH = new Tone.PolySynth(Tone.Synth, {\r\n\t\"volume\": 0,\r\n\t\"detune\": 0,\r\n\t\"portamento\": 0,\r\n\t\"envelope\": {\r\n\t\t\"attack\": 0.0001,\r\n\t\t\"attackCurve\": \"exponential\",\r\n\t\t\"decay\": 0.1,\r\n\t\t\"decayCurve\": \"exponential\",\r\n\t\t\"release\": 1,\r\n\t\t\"releaseCurve\": \"exponential\",\r\n\t\t\"sustain\": 0.3\r\n\t},\r\n\t\"oscillator\": {\r\n    type: \"fmtriangle16\",\r\n\t\t\"harmonicity\": 1,\r\n\t\t\"modulationIndex\": 1.2,\r\n    \"modulationType\": \"square\"\r\n\t}\r\n}).toDestination();\r\n","import React from 'react';\nimport { Chord } from './chord';\nimport { getChord, MidiPitch } from './chordFinder';\nimport { CircleOfFourths } from './circleOfFourths';\nimport { MidiNoteCollector, TONE_SYNTH } from './midiNoteCollector';\nimport { PianoRoll } from './pianoRoll';\nimport { MajorScale, Scale, SCALES } from './scales';\n\ninterface IAppState {\n  chord: Chord;\n  pitches: MidiPitch[];\n  scale: Scale;\n  soundEnabled: boolean;\n  // scaleDegree: ScaleDegree;\n  // inversion: Inversion;\n}\n\nclass App extends React.PureComponent<{}, IAppState> {\n  state: IAppState = {\n    pitches: [],\n    chord: MajorScale.chords[0],\n    // inversion: \"root\",\n    // scaleDegree: 1,\n    scale: MajorScale,\n    soundEnabled: true,\n  };\n  noteCollector: MidiNoteCollector;\n  constructor(props: {}) {\n    super(props);\n    this.noteCollector = new MidiNoteCollector(this.handleMidiNotes);\n  }\n\n  handleMidiNotes = (pitches: MidiPitch[]) => {\n    const chord = getChord(pitches, this.state.scale);\n    console.log(\"getting chord from\", pitches, \"got\", chord);\n    if (chord) {\n      this.setState({\n        pitches,\n        chord,\n      });\n    } else {\n      this.setState({ pitches });\n    }\n  }\n\n  private handleCheckboxClick = () => {\n    this.setState({\n      soundEnabled: !this.state.soundEnabled,\n    }, () => {\n      TONE_SYNTH.volume.value = this.state.soundEnabled ? 0 : -Infinity;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"top-area\">\n          <textarea className=\"scratchpad\" />\n          <select value={this.state.scale.name} onChange={(v) => this.setState({scale: SCALES[v.target.value]})}>\n            {Object.keys(SCALES).map((name) => <option value={name}>{name}</option>)}\n          </select>\n          <CircleOfFourths\n            chord={this.state.chord}\n            scale={this.state.scale}\n            />\n          <div className=\"sound-toggle\"><input type=\"checkbox\" checked={this.state.soundEnabled} onClick={this.handleCheckboxClick} />Sound</div>\n        </div>\n        <PianoRoll pitches={this.state.pitches} />\n      </div>\n    );\n  }\n}\n\nconst SoundManager = () => {\n  // const midi = \n  return null;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}